<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programs on Fanstasy Player / 幻想系玩家</title>
    <link>https://fantasyplayer.link/program/</link>
    <description>Recent content in Programs on Fanstasy Player / 幻想系玩家</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>aincvy@gmail.com (hideDragon)</managingEditor>
    <webMaster>aincvy@gmail.com (hideDragon)</webMaster>
    <lastBuildDate>Mon, 12 Dec 2022 15:01:37 +0800</lastBuildDate><atom:link href="https://fantasyplayer.link/program/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java中HashMap和synchronized的更多认识</title>
      <link>https://fantasyplayer.link/program/java%E4%B8%ADhashmap%E5%92%8Csynchronized%E7%9A%84%E6%9B%B4%E5%A4%9A%E8%AE%A4%E8%AF%86/</link>
      <pubDate>Mon, 12 Dec 2022 15:01:37 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java%E4%B8%ADhashmap%E5%92%8Csynchronized%E7%9A%84%E6%9B%B4%E5%A4%9A%E8%AE%A4%E8%AF%86/</guid>
      <description>详细内容 HashMap.keySet() 这个方法返回一个内部类 HashMap.KeySet的实例， 多次调用这个方法将获取同一个对象。 调用这个对象的 remove 方法 将删除HashMa</description>
    </item>
    
    <item>
      <title>Arch 编译安装 Mongo Cxx Driver 的记录</title>
      <link>https://fantasyplayer.link/program/arch-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-mongo-cxx-driver-%E7%9A%84%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sun, 20 Nov 2022 16:55:55 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/arch-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-mongo-cxx-driver-%E7%9A%84%E8%AE%B0%E5%BD%95/</guid>
      <description>基本内容 先从 github 上下载库的源码。 切换分支到 releases/v3.7 切换到自己需要的分支即可 命令参考： 1 2 3 git clone https://github.com/mongodb/mongo-cxx-driver.git cd mongo-cxx-driver git checkout releases/v3.7 使用命令 cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 -DCMAKE_INSTALL_PREFIX=/opt/mongo -DCMAKE_INSTALL_RPATH=/opt/mongo .. 进行配置 这个命令将会把</description>
    </item>
    
    <item>
      <title>Cpp Char 数组越界的问题记录</title>
      <link>https://fantasyplayer.link/program/cpp-char-%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 02 Apr 2022 14:28:43 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/cpp-char-%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
      <description>看下面的代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void uiChangeGraph(std::string_view path) { char tmp[FILENAME_BUF_SIZE]{ 0 }; auto t = currentProject()-&amp;gt;openGraph(path, tmp); } SightNodeGraph* Project::openGraph(std::string_view path, char* pathWithoutExtOut) { std::string targetPath{path}; std::filesystem::path temp(targetPath); if (temp.has_extension()) { std::string ext = temp.extension().generic_string(); if (ext == &amp;#34;.json&amp;#34; || ext == &amp;#34;.yaml&amp;#34;) { targetPath = std::string(targetPath, 0,</description>
    </item>
    
    <item>
      <title>Cpp 操作符重载函数在模板里找不到的问题记录</title>
      <link>https://fantasyplayer.link/program/cpp-%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD%E5%87%BD%E6%95%B0%E5%9C%A8%E6%A8%A1%E6%9D%BF%E9%87%8C%E6%89%BE%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 29 Jan 2022 12:10:00 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/cpp-%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD%E5%87%BD%E6%95%B0%E5%9C%A8%E6%A8%A1%E6%9D%BF%E9%87%8C%E6%89%BE%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
      <description>主要内容 笔者此前在使用 dbg-macro 库的时候碰到了一个奇怪的问题， 就是操作符的重载函数无法被找到。 准确的说是被模板的 SFINAE 原则忽略了。 大致的情况是这样的： 有</description>
    </item>
    
    <item>
      <title>Libuv 异步通知的实现</title>
      <link>https://fantasyplayer.link/program/libuv-%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sat, 25 Dec 2021 11:47:09 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/libuv-%E5%BC%82%E6%AD%A5%E9%80%9A%E7%9F%A5%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>主要内容 主要思路 问题是： 假设有一个线程 A， 有一个线程 B， 现在想让线程 B 给线程 A 发送消息。 本篇来说明一下如何使用 libuv 实现， 以及这样做有哪些不足。</description>
    </item>
    
    <item>
      <title>Backward Cpp库的使用记录</title>
      <link>https://fantasyplayer.link/program/backward-cppd%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 11 Dec 2021 16:51:47 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/backward-cppd%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</guid>
      <description>基本内容 项目地址： https://github.com/bombela/backward-cpp 这个库是一个用于在程序崩溃的时候打印堆栈信息和代码信息的 c++库。 笔者是在 mac 系统上尝试使用的，该库的尝试结果如下： 可以打</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Notes for Pro 读书笔记</title>
      <link>https://fantasyplayer.link/program/c&#43;&#43;-notes-for-pro-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 03 Nov 2021 16:35:43 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/c&#43;&#43;-notes-for-pro-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>笔者这几天抽空读完了这本C++ Notes for Professionals book， 所以写一篇读书笔记， 记录下笔者还记得的内容。 https://goalkicker.com/CPlusPlusBook/ 这本书对于从c 转向 cpp 的读者挺有帮助的， 笔者感觉。</description>
    </item>
    
    <item>
      <title>谷歌v8引擎的尝试</title>
      <link>https://fantasyplayer.link/program/%E8%B0%B7%E6%AD%8Cv8%E5%BC%95%E6%93%8E%E7%9A%84%E5%B0%9D%E8%AF%95/</link>
      <pubDate>Sat, 18 Sep 2021 11:45:44 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E8%B0%B7%E6%AD%8Cv8%E5%BC%95%E6%93%8E%E7%9A%84%E5%B0%9D%E8%AF%95/</guid>
      <description>谷歌V8是一个用于执行js脚本的引擎。 详细内容 Isolate 一个 Isolate 是一个独立的虚拟机。对应一个或多个线程。但同一时刻 只能被一个线程进入。所有的 Isolate 彼此之间</description>
    </item>
    
    <item>
      <title>Abseil 初体验</title>
      <link>https://fantasyplayer.link/program/abseil-%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Tue, 14 Sep 2021 09:26:04 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/abseil-%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>这是一个谷歌开源的cpp库， 包括了一些容器，字符串工具等。 Quickstart: https://abseil.io/docs/cpp/quickstart-cmake.html Github: https://github.com/abseil/abseil-cpp 这个库大概主要包括下面几个内容。 基础库 base 算法库 algorithm 容器库 container 哈希库 hash 字符串库 strings</description>
    </item>
    
    <item>
      <title>自动化持续构建 命令行部分介绍</title>
      <link>https://fantasyplayer.link/program/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8C%81%E7%BB%AD%E6%9E%84%E5%BB%BA-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 07 Aug 2021 14:43:20 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8C%81%E7%BB%AD%E6%9E%84%E5%BB%BA-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</guid>
      <description>在开发项目的时候可能会使用到持续集成工具， 比如 jenkins 之类的， 在使用的时候， 可能会需要写一些shell脚本来辅助完成工作， 本文就介绍一下相关的sh</description>
    </item>
    
    <item>
      <title>Cpp程序嵌入v8引擎的(踩坑)记录贴</title>
      <link>https://fantasyplayer.link/program/cpp%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5v8%E5%BC%95%E6%93%8E%E7%9A%84%E8%AE%B0%E5%BD%95%E8%B4%B4%E8%B8%A9%E5%9D%91/</link>
      <pubDate>Fri, 23 Jul 2021 18:51:51 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/cpp%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5v8%E5%BC%95%E6%93%8E%E7%9A%84%E8%AE%B0%E5%BD%95%E8%B4%B4%E8%B8%A9%E5%9D%91/</guid>
      <description>笔者最近打算做一个工具， 考虑使用v8引擎做js语言的解析和执行。 在嵌入的过程中踩了一些小坑， 本文用来记录一下。 长话短说 笔者使用的是Mac 系统</description>
    </item>
    
    <item>
      <title>Cpp 踩坑记录</title>
      <link>https://fantasyplayer.link/program/cpp-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sat, 01 May 2021 15:25:44 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/cpp-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</guid>
      <description>#param once 的缺点： 相同文件内容的不同位置会视为两个文件 当出现这个状况的时候， 可能会引发重定义的错误。 更多解释可见： https://stackoverflow.com/a/1946730/11226492 一个可能的场景是这样的： 有一个</description>
    </item>
    
    <item>
      <title>Cpp程序在调试模式下正常，在常规模式就崩溃得情况</title>
      <link>https://fantasyplayer.link/program/cpp%E7%A8%8B%E5%BA%8F%E5%9C%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%AD%A3%E5%B8%B8%E5%9C%A8%E5%B8%B8%E8%A7%84%E6%A8%A1%E5%BC%8F%E5%B0%B1%E5%B4%A9%E6%BA%83%E5%BE%97%E6%83%85%E5%86%B5/</link>
      <pubDate>Mon, 14 Dec 2020 21:22:30 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/cpp%E7%A8%8B%E5%BA%8F%E5%9C%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%AD%A3%E5%B8%B8%E5%9C%A8%E5%B8%B8%E8%A7%84%E6%A8%A1%E5%BC%8F%E5%B0%B1%E5%B4%A9%E6%BA%83%E5%BE%97%E6%83%85%E5%86%B5/</guid>
      <description>笔者前几天在使用cpp(c++)写代码得时候， 发现一个很蛋疼得问题， 在使用lldb进行调试得时候，程序完全正常，没有错误。 而退出调试模式， 使</description>
    </item>
    
    <item>
      <title>代码规范建议</title>
      <link>https://fantasyplayer.link/program/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E5%BB%BA%E8%AE%AE/</link>
      <pubDate>Mon, 07 Dec 2020 18:48:17 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E5%BB%BA%E8%AE%AE/</guid>
      <description>命名规范 # 1. 属性/成员 命名 静态常量属性 即使用 static final 修饰的属性， 属性名全部大写并添加javadoc的注释。 比如下面的例子 1 2 3 4 5 6 7 8 9 10 /** *</description>
    </item>
    
    <item>
      <title>关于单元测试的一点小想法</title>
      <link>https://fantasyplayer.link/program/%E5%85%B3%E4%BA%8E%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E7%9A%84%E4%B8%80%E7%82%B9%E5%B0%8F%E6%83%B3%E6%B3%95/</link>
      <pubDate>Mon, 05 Oct 2020 20:22:34 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E5%85%B3%E4%BA%8E%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E7%9A%84%E4%B8%80%E7%82%B9%E5%B0%8F%E6%83%B3%E6%B3%95/</guid>
      <description>编程语言： Java 因为笔者并没有完成过单元测试， 所以本篇内容比较少，也是一些小想法。 笔者在项目开发到了一定阶段的时候，考虑加入单元测试辅助开发。 但</description>
    </item>
    
    <item>
      <title>公司面试使用的面试题</title>
      <link>https://fantasyplayer.link/program/%E5%85%AC%E5%8F%B8%E9%9D%A2%E8%AF%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 28 Sep 2020 22:34:08 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E5%85%AC%E5%8F%B8%E9%9D%A2%E8%AF%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>简述 前些天，公司缺了一个做web后台的人，因为公司做后端的人就剩我一个了，所以面试的任务就交给我了。 笔者个人来说， 是第一次面试别人， 且笔者对</description>
    </item>
    
    <item>
      <title>Java字节操作的简单描述</title>
      <link>https://fantasyplayer.link/program/java%E5%AD%97%E8%8A%82%E6%93%8D%E4%BD%9C%E7%9A%84%E7%AE%80%E5%8D%95%E6%8F%8F%E8%BF%B0/</link>
      <pubDate>Mon, 21 Sep 2020 20:33:04 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java%E5%AD%97%E8%8A%82%E6%93%8D%E4%BD%9C%E7%9A%84%E7%AE%80%E5%8D%95%E6%8F%8F%E8%BF%B0/</guid>
      <description>byte[]和 int 互相转换 1 2 3 4 5 6 7 8 9 10 11 12 // 将 byte[] 转换成 int byte[] input = {(byte)0x65, (byte)0xFF, (byte)0x31 }; // 使用大端的方式转换成 int ： x == 0x65FF31 int x = (input[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 16 | (input[1] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8 | (input[2]</description>
    </item>
    
    <item>
      <title>Mysql 时区的问题</title>
      <link>https://fantasyplayer.link/program/mysql-%E6%97%B6%E5%8C%BA%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 07 Sep 2020 21:33:07 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/mysql-%E6%97%B6%E5%8C%BA%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>在链接字符串尾部添加参数 serverTimezone=Asia/Shanghai 即可让 mysql 的链接使用上海的时区。 其他说明 我刚开始尝试的是 serverTimezone=GMT+8 但是不知道为啥，没有生效。 目前考虑可能是 +的问题, 使用GM</description>
    </item>
    
    <item>
      <title>Java8LocalDateTime以及相关内容</title>
      <link>https://fantasyplayer.link/program/java8localdatetime%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</link>
      <pubDate>Mon, 11 May 2020 21:50:38 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java8localdatetime%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9/</guid>
      <description>Java8LocalDateTime以及相关内容 在Java8中，jdk包含了新的 时间API:LocalTime,LocalDate,Loca</description>
    </item>
    
    <item>
      <title>java字符串格式化</title>
      <link>https://fantasyplayer.link/program/java%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96/</link>
      <pubDate>Mon, 11 May 2020 21:50:38 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96/</guid>
      <description>简介 本文主要会介绍下面几种格式化的方式。 String.format() System.out.printf() 严格来说， 这并不是一种字符串格式化的方法。 MessageFormatter.format() String.format() 这是一个 较为常用的 格式化方法， 类似 C语言的 sprintf() 函数。</description>
    </item>
    
    <item>
      <title>利用做饭的流程来解释多线程的应用</title>
      <link>https://fantasyplayer.link/program/%E5%88%A9%E7%94%A8%E5%81%9A%E9%A5%AD%E7%9A%84%E6%B5%81%E7%A8%8B%E6%9D%A5%E8%A7%A3%E9%87%8A%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 11 May 2020 21:50:00 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E5%88%A9%E7%94%A8%E5%81%9A%E9%A5%AD%E7%9A%84%E6%B5%81%E7%A8%8B%E6%9D%A5%E8%A7%A3%E9%87%8A%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>单线程 &amp;amp; 单人做饭 单人做饭的流程 （我的流程） 选择吃什么 买菜，买肉 做米饭 洗肉（解冻肉），洗菜，择菜。 切肉 切菜， 切辣椒，葱花，姜片。 炸肉，下花椒八</description>
    </item>
    
    <item>
      <title>Akka Grpc的简单入门</title>
      <link>https://fantasyplayer.link/program/akka-grpc%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 11 May 2020 21:49:36 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/akka-grpc%E7%9A%84%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/</guid>
      <description>Akka Grpc 的简单入门 简介 Akka Grpc 是一个 rpc 框架。 基于akka-http,google protobuf 构建而成。 一些快速的链接。 官方文档： https://doc.akka.io/docs/akka-grpc/current/index.html Github地址： https://github.com/akka/akka-grpc 详细内容</description>
    </item>
    
    <item>
      <title>Java私有类型装箱拆箱</title>
      <link>https://fantasyplayer.link/program/java%E7%A7%81%E6%9C%89%E7%B1%BB%E5%9E%8B%E8%A3%85%E7%AE%B1%E6%8B%86%E7%AE%B1/</link>
      <pubDate>Thu, 30 Apr 2020 21:27:47 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java%E7%A7%81%E6%9C%89%E7%B1%BB%E5%9E%8B%E8%A3%85%E7%AE%B1%E6%8B%86%E7%AE%B1/</guid>
      <description>简述 在尽可能的情况下， 都应该使用 java的私有类型， 而装箱类型应该少用。 因为 装箱的类型 会占用更多的内存。 内存占用相关的内容 私有类型 装箱类型 内</description>
    </item>
    
    <item>
      <title>[状态机变种]有关状态栈的一些记录</title>
      <link>https://fantasyplayer.link/program/%E7%8A%B6%E6%80%81%E6%9C%BA%E5%8F%98%E7%A7%8D%E6%9C%89%E5%85%B3%E7%8A%B6%E6%80%81%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 27 Dec 2016 21:11:56 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/%E7%8A%B6%E6%80%81%E6%9C%BA%E5%8F%98%E7%A7%8D%E6%9C%89%E5%85%B3%E7%8A%B6%E6%80%81%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</guid>
      <description>写这篇文章的时候，笔者还是一个很菜的菜鸟， 本文可能有误。 我在弄我们公司的项目的时候。 地图 上面的每一个实体，我是当作一个单位来看的。每隔若干毫</description>
    </item>
    
    <item>
      <title>So 动态库引用问题</title>
      <link>https://fantasyplayer.link/program/so-%E5%8A%A8%E6%80%81%E5%BA%93%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 06 Dec 2016 21:20:43 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/so-%E5%8A%A8%E6%80%81%E5%BA%93%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</guid>
      <description>如果一个动态库 a.so 依赖了另外一个动态库 b.so . 那么， 当 b.so 的内容变更的时候， 可能就需要重新编译 a.so ，否则的话会产生一些无法预知，而且莫名奇妙的问题。 比</description>
    </item>
    
    <item>
      <title>Java 计算 抛物线的近似长度 炮弹的近似飞行时间</title>
      <link>https://fantasyplayer.link/program/java-%E8%AE%A1%E7%AE%97-%E6%8A%9B%E7%89%A9%E7%BA%BF%E7%9A%84%E8%BF%91%E4%BC%BC%E9%95%BF%E5%BA%A6-%E7%82%AE%E5%BC%B9%E7%9A%84%E8%BF%91%E4%BC%BC%E9%A3%9E%E8%A1%8C%E6%97%B6%E9%97%B4/</link>
      <pubDate>Sun, 20 Nov 2016 21:22:43 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/java-%E8%AE%A1%E7%AE%97-%E6%8A%9B%E7%89%A9%E7%BA%BF%E7%9A%84%E8%BF%91%E4%BC%BC%E9%95%BF%E5%BA%A6-%E7%82%AE%E5%BC%B9%E7%9A%84%E8%BF%91%E4%BC%BC%E9%A3%9E%E8%A1%8C%E6%97%B6%E9%97%B4/</guid>
      <description>记录一下 我是怎么计算抛物线的近似长度 。。 想当初我找了抛物线长度的计算公式， 找了好久都没找到简单方便的。。。 首先普及一下相关公式 ： 抛物线的一般</description>
    </item>
    
    <item>
      <title>Netty和cocos2dx一起使用碰到的问题</title>
      <link>https://fantasyplayer.link/program/netty%E5%92%8Ccocos2dx%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 17 Apr 2016 21:36:18 +0800</pubDate>
      <author>aincvy@gmail.com (hideDragon)</author>
      <guid>https://fantasyplayer.link/program/netty%E5%92%8Ccocos2dx%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>简述一下环境： java netty 的服务端， cocos2dx 的客户端 昨天测试的时候 发生了一个奇怪的现象。 服务端在本地跑的时候， 都是正常的。 放到阿里云的服务器上面去的时候。</description>
    </item>
    
  </channel>
</rss>
